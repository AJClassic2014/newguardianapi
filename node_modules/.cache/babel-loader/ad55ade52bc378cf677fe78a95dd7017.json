{"ast":null,"code":"import _toConsumableArray from \"/Users/YIN/Documents/workspace/gardianapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/YIN/Documents/workspace/gardianapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/YIN/Documents/workspace/gardianapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/YIN/Documents/workspace/gardianapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/YIN/Documents/workspace/gardianapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/YIN/Documents/workspace/gardianapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/YIN/Documents/workspace/gardianapi/src/components/CheckboxList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: 800,\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline'\n    },\n    title: {\n      fontSize: '1rem',\n      fontWeight: 550\n    },\n    section: {\n      color: '#ff6600'\n    },\n    pinned: {\n      backgroundColor: '#70c5ca85'\n    },\n    pinnedBar: {\n      fontSize: '1rem',\n      fontWeight: 550,\n      backgroundColor: '#ed8836a3'\n    },\n    pinnedTitle: {\n      fontSize: '1rem',\n      fontWeight: 550,\n      color: 'white'\n    },\n    link: {\n      textDecoration: 'none'\n    }\n  };\n};\n\nvar CheckboxList = /*#__PURE__*/function (_React$Component) {\n  _inherits(CheckboxList, _React$Component);\n\n  function CheckboxList(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxList).call(this, props));\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var _this$props = _this.props,\n            pinnedList = _this$props.pinnedList,\n            handlePinnedList = _this$props.handlePinnedList;\n        var currentIndex = pinnedList.indexOf(value);\n\n        var newList = _toConsumableArray(pinnedList);\n\n        if (currentIndex === -1) {\n          newList.push(value);\n        } else {\n          newList.splice(currentIndex, 1);\n        }\n\n        handlePinnedList(newList);\n\n        _this.setState({\n          checked: newList\n        });\n\n        console.log(newList);\n      };\n    };\n\n    _this.state = {\n      checked: [1]\n    };\n    return _this;\n  }\n\n  _createClass(CheckboxList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          results = _this$props2.results,\n          pinnedList = _this$props2.pinnedList;\n      return /*#__PURE__*/React.createElement(List, {\n        dense: true,\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, results.map(function (value) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          key: value.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ListItemText, {\n          primary: /*#__PURE__*/React.createElement(Typography, {\n            className: classes.title,\n            color: \"textPrimary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: value.link,\n            className: classes.link,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }\n          }, value.title)),\n          secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            component: \"span\",\n            color: \"textPrimary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }\n          }, \"Published: \", value.date, \"  \\xA0\\xA0   \", /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.section,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 61\n            }\n          }, \"Section:\"), \" \", value.section), /*#__PURE__*/React.createElement(\"a\", {\n            href: value.link,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }\n          }, value.link)),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          onChange: _this2.handleToggle(value),\n          checked: _this2.state.checked.indexOf(value) !== -1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        })));\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.pinnedBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.pinnedTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, \"Pinned Items\")), pinnedList.map(function (pinnedItem) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          className: classes.pinned,\n          key: pinnedItem.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(ListItemText, {\n          primary: /*#__PURE__*/React.createElement(Typography, {\n            className: classes.title,\n            color: \"textPrimary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }\n          }, pinnedItem.title),\n          secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            component: \"span\",\n            color: \"textPrimary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }\n          }, pinnedItem.date, \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.section,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 52\n            }\n          }, \"Section:\"), \" \", pinnedItem.section), pinnedItem.link),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          onChange: _this2.handleToggle(pinnedItem),\n          checked: _this2.state.checked.indexOf(pinnedItem) !== -1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return CheckboxList;\n}(React.Component);\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CheckboxList);","map":{"version":3,"sources":["/Users/YIN/Documents/workspace/gardianapi/src/components/CheckboxList.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","Typography","styles","theme","root","width","backgroundColor","palette","background","paper","inline","display","title","fontSize","fontWeight","section","color","pinned","pinnedBar","pinnedTitle","link","textDecoration","CheckboxList","props","handleToggle","value","pinnedList","handlePinnedList","currentIndex","indexOf","newList","push","splice","setState","checked","console","log","state","classes","results","map","id","date","pinnedItem","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 800,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  title: {\r\n    fontSize: '1rem',\r\n    fontWeight: 550,\r\n  },\r\n  section: {\r\n    color: '#ff6600',\r\n  },\r\n  pinned: {\r\n    backgroundColor: '#70c5ca85',\r\n  },\r\n  pinnedBar: {\r\n    fontSize: '1rem',\r\n    fontWeight: 550,\r\n    backgroundColor: '#ed8836a3',\r\n  },\r\n  pinnedTitle: {\r\n    fontSize: '1rem',\r\n    fontWeight: 550,\r\n    color: 'white',\r\n  },\r\n  link: {\r\n    textDecoration:'none',\r\n  }\r\n\r\n});\r\n\r\nclass CheckboxList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: [1],\r\n    };\r\n  }\r\n\r\n  handleToggle = value => () => {\r\n    const { pinnedList, handlePinnedList } = this.props;\r\n    const currentIndex = pinnedList.indexOf(value);\r\n    const newList = [...pinnedList];\r\n\r\n    if (currentIndex === -1) {\r\n      newList.push(value);\r\n    } else {\r\n      newList.splice(currentIndex, 1);\r\n    }\r\n    handlePinnedList(newList);\r\n    this.setState({\r\n      checked: newList,\r\n    });\r\n    console.log(newList);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      results,\r\n      pinnedList,\r\n    } = this.props;\r\n    return (\r\n      <List dense className={classes.root}>\r\n        {results.map(value => (\r\n          <ListItem key={value.id}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textPrimary\">\r\n                  <a href={value.link} className={classes.link}>{value.title}</a>\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography component=\"span\" color=\"textPrimary\">\r\n                    Published: {value.date}  &nbsp;&nbsp;   <span className={classes.section}>Section:</span> {value.section}\r\n                  </Typography>\r\n                  <a href={value.link}>{value.link}</a>\r\n                </React.Fragment>\r\n              } />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                onChange={this.handleToggle(value)}\r\n                checked={this.state.checked.indexOf(value) !== -1}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n        <div className={classes.pinnedBar}>\r\n          <span className={classes.pinnedTitle}>\r\n            Pinned Items\r\n        </span>\r\n        </div>\r\n        {\r\n          pinnedList.map(pinnedItem => (\r\n            <ListItem className={classes.pinned} key={pinnedItem.id}>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography className={classes.title} color=\"textPrimary\">\r\n                    {pinnedItem.title}\r\n                  </Typography>\r\n                }\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography component=\"span\" color=\"textPrimary\">\r\n                      {pinnedItem.date}&nbsp;&nbsp;<span className={classes.section}>Section:</span> {pinnedItem.section}\r\n                    </Typography>\r\n                    {pinnedItem.link}\r\n                  </React.Fragment>\r\n                } />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  onChange={this.handleToggle(pinnedItem)}\r\n                  checked={this.state.checked.indexOf(pinnedItem) !== -1}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          )\r\n          )\r\n        }\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nCheckboxList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CheckboxList);"]},"metadata":{},"sourceType":"module"}