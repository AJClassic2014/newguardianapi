{"ast":null,"code":"import * as moment from 'moment';\nexport default (function (data) {\n  var results = [];\n  var section = {};\n  data.map(function (item) {\n    if (!section[item.sectionId]) {\n      section[item.sectionId] = item.sectionId;\n      results.push({\n        id: item.id,\n        title: item.webTitle,\n        link: item.webUrl,\n        date: moment(item.webPublicationDate).format('DD/MM/YYYY'),\n        section: item.sectionId\n      });\n    } else {\n      for (var i = 0; i < results.length; i++) {\n        if (results[i].section === item.sectionId) {\n          results.splice(i + 1, 0, {\n            id: item.id,\n            title: item.webTitle,\n            link: item.webUrl,\n            date: moment(item.webPublicationDate).format('DD/MM/YYYY'),\n            section: item.sectionId\n          });\n          break;\n        }\n      }\n    }\n  });\n  return results;\n});","map":{"version":3,"sources":["/Users/YIN/Documents/workspace/gardianapi/src/functions/GroupBySection.js"],"names":["moment","data","results","section","map","item","sectionId","push","id","title","webTitle","link","webUrl","date","webPublicationDate","format","i","length","splice"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AAEA,gBAAe,UAACC,IAAD,EAAU;AACvB,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AACAF,EAAAA,IAAI,CAACG,GAAL,CAAS,UAAAC,IAAI,EAAI;AACf,QAAI,CAACF,OAAO,CAACE,IAAI,CAACC,SAAN,CAAZ,EACA;AACEH,MAAAA,OAAO,CAACE,IAAI,CAACC,SAAN,CAAP,GAA0BD,IAAI,CAACC,SAA/B;AACAJ,MAAAA,OAAO,CAACK,IAAR,CACE;AACEC,QAAAA,EAAE,EAAEH,IAAI,CAACG,EADX;AAEEC,QAAAA,KAAK,EAAEJ,IAAI,CAACK,QAFd;AAGEC,QAAAA,IAAI,EAAEN,IAAI,CAACO,MAHb;AAIEC,QAAAA,IAAI,EAAEb,MAAM,CAACK,IAAI,CAACS,kBAAN,CAAN,CAAgCC,MAAhC,CAAuC,YAAvC,CAJR;AAKEZ,QAAAA,OAAO,EAAEE,IAAI,CAACC;AALhB,OADF;AASD,KAZD,MAcA;AACE,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,OAAO,CAACe,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAId,OAAO,CAACc,CAAD,CAAP,CAAWb,OAAX,KAAuBE,IAAI,CAACC,SAAhC,EAA2C;AACzCJ,UAAAA,OAAO,CAACgB,MAAR,CACEF,CAAC,GAAG,CADN,EAEE,CAFF,EAGE;AACER,YAAAA,EAAE,EAAEH,IAAI,CAACG,EADX;AAEEC,YAAAA,KAAK,EAAEJ,IAAI,CAACK,QAFd;AAGEC,YAAAA,IAAI,EAAEN,IAAI,CAACO,MAHb;AAIEC,YAAAA,IAAI,EAAEb,MAAM,CAACK,IAAI,CAACS,kBAAN,CAAN,CAAgCC,MAAhC,CAAuC,YAAvC,CAJR;AAKEZ,YAAAA,OAAO,EAAEE,IAAI,CAACC;AALhB,WAHF;AAWA;AACD;AACF;AACF;AACF,GAjCD;AAkCA,SAAOJ,OAAP;AACD,CAtCD","sourcesContent":["import * as moment from 'moment';\r\n\r\nexport default (data) => {\r\n  let results = [];\r\n  let section = {};\r\n  data.map(item => {\r\n    if (!section[item.sectionId])\r\n    {\r\n      section[item.sectionId] = item.sectionId;\r\n      results.push(\r\n        {\r\n          id: item.id,\r\n          title: item.webTitle,\r\n          link: item.webUrl,\r\n          date: moment(item.webPublicationDate).format('DD/MM/YYYY'),\r\n          section: item.sectionId\r\n        }\r\n      );\r\n    }\r\n    else\r\n    {\r\n      for (let i = 0; i < results.length; i++) {\r\n        if (results[i].section === item.sectionId) {\r\n          results.splice(\r\n            i + 1,\r\n            0,\r\n            {\r\n              id: item.id,\r\n              title: item.webTitle,\r\n              link: item.webUrl,\r\n              date: moment(item.webPublicationDate).format('DD/MM/YYYY'),\r\n              section: item.sectionId\r\n            }\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return results;\r\n}"]},"metadata":{},"sourceType":"module"}